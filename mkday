#!/bin/sh

set -e

if [ "$#" -gt 0 ]; then
  year="$1"
else
  year=$(ls -1 src | grep -Eo '[0-9]+' | sort -r | head -1)
fi
directory="src/year_$year"

if [ ! -d "$directory" ]; then
  echo "Year $year not found"
  exit 1
fi

if [ "$#" -gt 1 ]; then
  day="$2"
else
  day=$(($(ls -1 "$directory" | grep -Eo '[1-9][0-9]*' | sort -r | head -1) + 1))
fi
padded_day=$(printf "%02d" "$day")
filename="$directory/day$padded_day.rs"

if [ -f "$filename" ]; then
  echo "$year Day $day already exists"
  exit 1
fi

sed -i -E ':a;N;$!ba;s/(mod day[0-9]{2};\n)\n/\1mod day'"$padded_day"';\n\n/; s/days_vec!\([0-9]+\)/days_vec!('"$day"')/' "$directory.rs"

cat <<EOF > "$filename"
use crate::day::Day;

pub struct Day$padded_day {}

impl Day<'_> for Day$padded_day {
    type T1 = usize;
    type T2 = usize;

    fn new(input: &str) -> Self {
        Self {}
    }

    fn part_1(&self) -> Self::T1 {
        0
    }

    fn part_2(&self) -> Self::T2 {
        0
    }
}
EOF

echo "Created $filename"
